[GENERAL]
model_file: top.sv[top],init.ssts
abstract_clock: True
vcd: True

[DEFAULT]
bmc_length: 20
solver_name: btor
symbolic_init: True

[FULL SANITY]
description: "Check that full is wired correctly"
formula: 'full'[0:0] = 'af.gen_fifos[0].f.full'
verification: safety
assumptions: assumptions.txt
expected: True
prove: True

[DATA INTEGRITY]
description: "Check data integrity of the N FIFOs + Arbiter"
formula: 'prop_signal' = 1_1
verification: safety
assumptions: assumptions.txt
expected: Unknown
smt2_tracing: abstract_array_syminit_data-integrity.smt2
bmc_length: 10
# skip_solving: True

[POR COVER]
description: "Check that POR of the N FIFOs + Arbiter hasn't overconstrained the system"
bmc_length: 20
formula: 'full' != 1_2
verification: safety
assumptions: por-assumptions.txt
expected: False

[CHECK POR]
description: "Check that POR is actually working"
bmc_length: 20
formula: ('reqs'[0:0] = 1_1) -> ((next('push'[0:0]) = 0_1) | ('full'[0:0] = 1_1))
verification: safety
assumptions: por-assumptions.txt
expected: True
prove: True


[POR DATA INTEGRITY]
description: "Check data integrity of the N FIFOs + Arbiter using Partial Order Reduction"
formula: 'prop_signal' = 1_1
verification: safety
assumptions: por-assumptions.txt
expected: Unknown
smt2_tracing: abstract_array_syminit_por.smt2
# bmc_length: 40
# skip_solving: True

[POR_LONGEST_TRACE]
description: "Check that packet must have exited"
# bmc_length_min = 17
formula: 'data_out_vld' = 0_1
verification: safety
assumptions: por-assumptions.txt
expected: Unknown
smt2_tracing: abstract_array_syminit_por-packet-exits.smt2
skip_solving: True
bmc_length: 20

[PROVE_DATA_OUT_VLD_LOW_AFTER_EXIT]
# not sure this is quite right -- need to show that it stays zero
description: "Check that once the packet has exited, data_out_vld goes low"
formula: (data_out_vld = 1_1) -> (next(data_out_vld) = 0_1)
verification: safety
assumptions: por-assumptions.txt
expected: True
prove: True
smt2_tracing: syminit_proof.smt2
