;; Removed all define-funs 

(set-option :incremental false)
(set-option :produce-models true)
(set-info :notes "CVC4 always dumps the most general, all-supported logic (below), as some internals might require the use of a logic more general than the input.")
(set-logic ALL)
(declare-fun |z_sum_6#2| () Bool)
(declare-fun |z_sum_is#4| () Bool)
(declare-fun |z_sum_2#14| () (_ BitVec 8))
(declare-fun |$paramod/FF/WIDTH=8_0#16| () (_ BitVec 8))
(declare-fun |z_sum_3#17| () (_ BitVec 8))
(declare-fun |$paramod/FF/WIDTH=8_1#19| () (_ BitVec 8))
(declare-fun |z_sum_0#20| () Bool)
(declare-fun |$paramod/FF/WIDTH=8_2#22| () Bool)
(declare-fun |z_sum_1#23| () Bool)
(declare-fun |$paramod/FF/WIDTH=8_3#25| () Bool)
(declare-fun |$paramod/FF/WIDTH=8_0#27| () (_ BitVec 8))
(declare-fun |z_sum_4#28| () (_ BitVec 8))
(declare-fun |$paramod/FF/WIDTH=8_1#30| () (_ BitVec 8))
(declare-fun |$paramod/FF/WIDTH=8_2#32| () Bool)
(declare-fun |$paramod/FF/WIDTH=8_3#34| () Bool)
(declare-fun |z_sum_6#54| () Bool)
(declare-fun |z_sum_is#56| () Bool)
(declare-fun |z_sum_2#66| () (_ BitVec 8))
(declare-fun |$paramod/FF/WIDTH=8_0#68| () (_ BitVec 8))
(declare-fun |z_sum_3#69| () (_ BitVec 8))
(declare-fun |$paramod/FF/WIDTH=8_1#71| () (_ BitVec 8))
(declare-fun |z_sum_0#72| () Bool)
(declare-fun |$paramod/FF/WIDTH=8_2#74| () Bool)
(declare-fun |z_sum_1#75| () Bool)
(declare-fun |$paramod/FF/WIDTH=8_3#77| () Bool)
(declare-fun |$paramod/FF/WIDTH=8_0#79| () (_ BitVec 8))
(declare-fun |z_sum_4#80| () (_ BitVec 8))
(declare-fun |$paramod/FF/WIDTH=8_1#82| () (_ BitVec 8))
(declare-fun |$paramod/FF/WIDTH=8_2#84| () Bool)
(declare-fun |$paramod/FF/WIDTH=8_3#86| () Bool)
(declare-fun |z_sum_6#108| () Bool)
(declare-fun |z_sum_is#110| () Bool)
(declare-fun |z_sum_2#120| () (_ BitVec 8))
(declare-fun |$paramod/FF/WIDTH=8_0#122| () (_ BitVec 8))
(declare-fun |z_sum_3#123| () (_ BitVec 8))
(declare-fun |$paramod/FF/WIDTH=8_1#125| () (_ BitVec 8))
(declare-fun |z_sum_0#126| () Bool)
(declare-fun |$paramod/FF/WIDTH=8_2#128| () Bool)
(declare-fun |z_sum_1#129| () Bool)
(declare-fun |$paramod/FF/WIDTH=8_3#131| () Bool)
(declare-fun |$paramod/FF/WIDTH=8_0#133| () (_ BitVec 8))
(declare-fun |z_sum_4#134| () (_ BitVec 8))
(declare-fun |$paramod/FF/WIDTH=8_1#136| () (_ BitVec 8))
(declare-fun |$paramod/FF/WIDTH=8_2#138| () Bool)
(declare-fun |$paramod/FF/WIDTH=8_3#140| () Bool)
(meta-info :status unsat)
(set-info :notes "termITE_1 is a variable introduced due to term-level ITE removal")
(declare-fun termITE_1 () (_ BitVec 8))
(set-info :notes "termITE_2 is a variable introduced due to term-level ITE removal")
(declare-fun termITE_2 () (_ BitVec 8))
(assert (and (= |z_sum_0#20| |$paramod/FF/WIDTH=8_2#22|) (= |z_sum_1#23| |$paramod/FF/WIDTH=8_3#25|) (= |z_sum_0#20| |$paramod/FF/WIDTH=8_2#32|) (= |z_sum_1#23| |$paramod/FF/WIDTH=8_3#34|)))
(assert (and (= |z_sum_0#72| |$paramod/FF/WIDTH=8_2#74|) (= |z_sum_1#75| |$paramod/FF/WIDTH=8_3#77|) (= |z_sum_0#72| |$paramod/FF/WIDTH=8_2#84|) (= |z_sum_1#75| |$paramod/FF/WIDTH=8_3#86|)))
(assert (and (= |z_sum_0#126| |$paramod/FF/WIDTH=8_2#128|) (= |z_sum_1#129| |$paramod/FF/WIDTH=8_3#131|) (= |z_sum_0#126| |$paramod/FF/WIDTH=8_2#138|) (= |z_sum_1#129| |$paramod/FF/WIDTH=8_3#140|)))
(assert (not (= ((_ extract 0 0) (bvadd termITE_1 termITE_2)) (_ bv0 1))))
(assert (ite |$paramod/FF/WIDTH=8_3#77| (= termITE_1 |z_sum_2#66|) (= termITE_1 (_ bv0 8))))
(assert (ite |$paramod/FF/WIDTH=8_3#86| (= termITE_2 |z_sum_2#66|) (= termITE_2 (_ bv0 8))))
(check-sat)
unsat
