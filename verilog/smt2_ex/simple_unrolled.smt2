(set-option :produce-models true)
(set-logic QF_ABV)
(declare-fun |z_sum_6#2| () Bool)
(declare-fun |z_sum_is#4| () Bool)
(define-fun |z_sum_9#3| () Bool |z_sum_is#4|)
(define-fun |z_sum_u 0#1| () Bool (or |z_sum_6#2| (not |z_sum_9#3|)))
(define-fun |z_sum_11#6| () Bool (not (or |z_sum_6#2| false)))
(define-fun |z_sum_10#7| () (_ BitVec 1) (ite |z_sum_9#3| #b0 #b1))
(define-fun |z_sum_u 1#5| () Bool (or |z_sum_11#6| (not (= ((_ extract 0 0) |z_sum_10#7|) #b1))))
(define-fun |$paramod/FF/WIDTH=8_u#9| () Bool true)
(define-fun |$paramod/FF/WIDTH=8_u#11| () Bool true)
(define-fun |z_sum_u#0| () Bool (and |z_sum_u 0#1| |z_sum_u 1#5| |$paramod/FF/WIDTH=8_u#9| |$paramod/FF/WIDTH=8_u#11| ))
(assert |z_sum_u#0|)
(declare-fun |z_sum_2#14| () (_ BitVec 8))
(define-fun |z_sum_7#13| () (_ BitVec 8) (ite |z_sum_6#2| #b00000000 |z_sum_2#14|))
(declare-fun |$paramod/FF/WIDTH=8_0#16| () (_ BitVec 8))
(define-fun |$paramod/FF/WIDTH=8_n D#15| () (_ BitVec 8) |$paramod/FF/WIDTH=8_0#16|)
(declare-fun |z_sum_3#17| () (_ BitVec 8))
(declare-fun |$paramod/FF/WIDTH=8_1#19| () (_ BitVec 8))
(define-fun |$paramod/FF/WIDTH=8_n Q#18| () (_ BitVec 8) |$paramod/FF/WIDTH=8_1#19|)
(declare-fun |z_sum_0#20| () Bool)
(declare-fun |$paramod/FF/WIDTH=8_2#22| () Bool)
(define-fun |$paramod/FF/WIDTH=8_n clk#21| () Bool |$paramod/FF/WIDTH=8_2#22|)
(declare-fun |z_sum_1#23| () Bool)
(declare-fun |$paramod/FF/WIDTH=8_3#25| () Bool)
(define-fun |$paramod/FF/WIDTH=8_n en#24| () Bool |$paramod/FF/WIDTH=8_3#25|)
(declare-fun |$paramod/FF/WIDTH=8_0#27| () (_ BitVec 8))
(define-fun |$paramod/FF/WIDTH=8_n D#26| () (_ BitVec 8) |$paramod/FF/WIDTH=8_0#27|)
(declare-fun |z_sum_4#28| () (_ BitVec 8))
(declare-fun |$paramod/FF/WIDTH=8_1#30| () (_ BitVec 8))
(define-fun |$paramod/FF/WIDTH=8_n Q#29| () (_ BitVec 8) |$paramod/FF/WIDTH=8_1#30|)
(declare-fun |$paramod/FF/WIDTH=8_2#32| () Bool)
(define-fun |$paramod/FF/WIDTH=8_n clk#31| () Bool |$paramod/FF/WIDTH=8_2#32|)
(declare-fun |$paramod/FF/WIDTH=8_3#34| () Bool)
(define-fun |$paramod/FF/WIDTH=8_n en#33| () Bool |$paramod/FF/WIDTH=8_3#34|)
(define-fun |$paramod/FF/WIDTH=8_h#35| () Bool true)
(define-fun |$paramod/FF/WIDTH=8_h#36| () Bool true)
(define-fun |z_sum_h#12| () Bool (and (= |z_sum_7#13| |$paramod/FF/WIDTH=8_n D#15|) (= |z_sum_3#17| |$paramod/FF/WIDTH=8_n Q#18|) (= |z_sum_0#20| |$paramod/FF/WIDTH=8_n clk#21|) (= |z_sum_1#23| |$paramod/FF/WIDTH=8_n en#24|) (= |z_sum_7#13| |$paramod/FF/WIDTH=8_n D#26|) (= |z_sum_4#28| |$paramod/FF/WIDTH=8_n Q#29|) (= |z_sum_0#20| |$paramod/FF/WIDTH=8_n clk#31|) (= |z_sum_1#23| |$paramod/FF/WIDTH=8_n en#33|) |$paramod/FF/WIDTH=8_h#35| |$paramod/FF/WIDTH=8_h#36| ))
(assert |z_sum_h#12|)
(assert true)
(define-fun |$paramod/FF/WIDTH=8_i#38| () Bool (= |$paramod/FF/WIDTH=8_1#19| #b00000000) )
(define-fun |$paramod/FF/WIDTH=8_i#39| () Bool (= |$paramod/FF/WIDTH=8_1#30| #b00000000) )
(define-fun |z_sum_i#37| () Bool (and |$paramod/FF/WIDTH=8_i#38| |$paramod/FF/WIDTH=8_i#39| ))
(assert |z_sum_i#37|)
(assert |z_sum_is#4|)
(define-fun |z_sum_5#49| () (_ BitVec 8) (bvadd |z_sum_3#17| |z_sum_4#28|))
(define-fun |z_sum_8#48| () (_ BitVec 1) (bvnot ((_ extract 0 0) |z_sum_5#49|)))
(define-fun |z_sum_a 0#47| () Bool (or (= ((_ extract 0 0) |z_sum_8#48|) #b1) (not (= ((_ extract 0 0) |z_sum_10#7|) #b1))))
(define-fun |$paramod/FF/WIDTH=8_a#50| () Bool true)
(define-fun |$paramod/FF/WIDTH=8_a#51| () Bool true)
(define-fun |z_sum_a#46| () Bool (and |z_sum_a 0#47| |$paramod/FF/WIDTH=8_a#50| |$paramod/FF/WIDTH=8_a#51| ))
(assert |z_sum_a#46|)
(assert true)
(declare-fun |z_sum_6#54| () Bool)
(declare-fun |z_sum_is#56| () Bool)
(define-fun |z_sum_9#55| () Bool |z_sum_is#56|)
(define-fun |z_sum_u 0#53| () Bool (or |z_sum_6#54| (not |z_sum_9#55|)))
(define-fun |z_sum_11#58| () Bool (not (or |z_sum_6#54| false)))
(define-fun |z_sum_10#59| () (_ BitVec 1) (ite |z_sum_9#55| #b0 #b1))
(define-fun |z_sum_u 1#57| () Bool (or |z_sum_11#58| (not (= ((_ extract 0 0) |z_sum_10#59|) #b1))))
(define-fun |$paramod/FF/WIDTH=8_u#61| () Bool true)
(define-fun |$paramod/FF/WIDTH=8_u#63| () Bool true)
(define-fun |z_sum_u#52| () Bool (and |z_sum_u 0#53| |z_sum_u 1#57| |$paramod/FF/WIDTH=8_u#61| |$paramod/FF/WIDTH=8_u#63| ))
(assert |z_sum_u#52|)
(declare-fun |z_sum_2#66| () (_ BitVec 8))
(define-fun |z_sum_7#65| () (_ BitVec 8) (ite |z_sum_6#54| #b00000000 |z_sum_2#66|))
(declare-fun |$paramod/FF/WIDTH=8_0#68| () (_ BitVec 8))
(define-fun |$paramod/FF/WIDTH=8_n D#67| () (_ BitVec 8) |$paramod/FF/WIDTH=8_0#68|)
(declare-fun |z_sum_3#69| () (_ BitVec 8))
(declare-fun |$paramod/FF/WIDTH=8_1#71| () (_ BitVec 8))
(define-fun |$paramod/FF/WIDTH=8_n Q#70| () (_ BitVec 8) |$paramod/FF/WIDTH=8_1#71|)
(declare-fun |z_sum_0#72| () Bool)
(declare-fun |$paramod/FF/WIDTH=8_2#74| () Bool)
(define-fun |$paramod/FF/WIDTH=8_n clk#73| () Bool |$paramod/FF/WIDTH=8_2#74|)
(declare-fun |z_sum_1#75| () Bool)
(declare-fun |$paramod/FF/WIDTH=8_3#77| () Bool)
(define-fun |$paramod/FF/WIDTH=8_n en#76| () Bool |$paramod/FF/WIDTH=8_3#77|)
(declare-fun |$paramod/FF/WIDTH=8_0#79| () (_ BitVec 8))
(define-fun |$paramod/FF/WIDTH=8_n D#78| () (_ BitVec 8) |$paramod/FF/WIDTH=8_0#79|)
(declare-fun |z_sum_4#80| () (_ BitVec 8))
(declare-fun |$paramod/FF/WIDTH=8_1#82| () (_ BitVec 8))
(define-fun |$paramod/FF/WIDTH=8_n Q#81| () (_ BitVec 8) |$paramod/FF/WIDTH=8_1#82|)
(declare-fun |$paramod/FF/WIDTH=8_2#84| () Bool)
(define-fun |$paramod/FF/WIDTH=8_n clk#83| () Bool |$paramod/FF/WIDTH=8_2#84|)
(declare-fun |$paramod/FF/WIDTH=8_3#86| () Bool)
(define-fun |$paramod/FF/WIDTH=8_n en#85| () Bool |$paramod/FF/WIDTH=8_3#86|)
(define-fun |$paramod/FF/WIDTH=8_h#87| () Bool true)
(define-fun |$paramod/FF/WIDTH=8_h#88| () Bool true)
(define-fun |z_sum_h#64| () Bool (and (= |z_sum_7#65| |$paramod/FF/WIDTH=8_n D#67|) (= |z_sum_3#69| |$paramod/FF/WIDTH=8_n Q#70|) (= |z_sum_0#72| |$paramod/FF/WIDTH=8_n clk#73|) (= |z_sum_1#75| |$paramod/FF/WIDTH=8_n en#76|) (= |z_sum_7#65| |$paramod/FF/WIDTH=8_n D#78|) (= |z_sum_4#80| |$paramod/FF/WIDTH=8_n Q#81|) (= |z_sum_0#72| |$paramod/FF/WIDTH=8_n clk#83|) (= |z_sum_1#75| |$paramod/FF/WIDTH=8_n en#85|) |$paramod/FF/WIDTH=8_h#87| |$paramod/FF/WIDTH=8_h#88| ))
(assert |z_sum_h#64|)
(assert true)
(define-fun |$paramod/FF/WIDTH=8_4#91| () (_ BitVec 8) (ite |$paramod/FF/WIDTH=8_3#25| |$paramod/FF/WIDTH=8_0#16| |$paramod/FF/WIDTH=8_1#19|))
(define-fun |$paramod/FF/WIDTH=8_t#90| () Bool (= |$paramod/FF/WIDTH=8_4#91| |$paramod/FF/WIDTH=8_1#71|) )
(define-fun |$paramod/FF/WIDTH=8_4#93| () (_ BitVec 8) (ite |$paramod/FF/WIDTH=8_3#34| |$paramod/FF/WIDTH=8_0#27| |$paramod/FF/WIDTH=8_1#30|))
(define-fun |$paramod/FF/WIDTH=8_t#92| () Bool (= |$paramod/FF/WIDTH=8_4#93| |$paramod/FF/WIDTH=8_1#82|) )
(define-fun |z_sum_t#89| () Bool (and |$paramod/FF/WIDTH=8_t#90| |$paramod/FF/WIDTH=8_t#92| ))
(assert |z_sum_t#89|)
(assert (not |z_sum_is#56|))
(define-fun |z_sum_5#103| () (_ BitVec 8) (bvadd |z_sum_3#69| |z_sum_4#80|))
(define-fun |z_sum_8#102| () (_ BitVec 1) (bvnot ((_ extract 0 0) |z_sum_5#103|)))
(define-fun |z_sum_a 0#101| () Bool (or (= ((_ extract 0 0) |z_sum_8#102|) #b1) (not (= ((_ extract 0 0) |z_sum_10#59|) #b1))))
(define-fun |$paramod/FF/WIDTH=8_a#104| () Bool true)
(define-fun |$paramod/FF/WIDTH=8_a#105| () Bool true)
(define-fun |z_sum_a#100| () Bool (and |z_sum_a 0#101| |$paramod/FF/WIDTH=8_a#104| |$paramod/FF/WIDTH=8_a#105| ))
(assert |z_sum_a#100|)
(assert true)
(declare-fun |z_sum_6#108| () Bool)
(declare-fun |z_sum_is#110| () Bool)
(define-fun |z_sum_9#109| () Bool |z_sum_is#110|)
(define-fun |z_sum_u 0#107| () Bool (or |z_sum_6#108| (not |z_sum_9#109|)))
(define-fun |z_sum_11#112| () Bool (not (or |z_sum_6#108| false)))
(define-fun |z_sum_10#113| () (_ BitVec 1) (ite |z_sum_9#109| #b0 #b1))
(define-fun |z_sum_u 1#111| () Bool (or |z_sum_11#112| (not (= ((_ extract 0 0) |z_sum_10#113|) #b1))))
(define-fun |$paramod/FF/WIDTH=8_u#115| () Bool true)
(define-fun |$paramod/FF/WIDTH=8_u#117| () Bool true)
(define-fun |z_sum_u#106| () Bool (and |z_sum_u 0#107| |z_sum_u 1#111| |$paramod/FF/WIDTH=8_u#115| |$paramod/FF/WIDTH=8_u#117| ))
(assert |z_sum_u#106|)
(declare-fun |z_sum_2#120| () (_ BitVec 8))
(define-fun |z_sum_7#119| () (_ BitVec 8) (ite |z_sum_6#108| #b00000000 |z_sum_2#120|))
(declare-fun |$paramod/FF/WIDTH=8_0#122| () (_ BitVec 8))
(define-fun |$paramod/FF/WIDTH=8_n D#121| () (_ BitVec 8) |$paramod/FF/WIDTH=8_0#122|)
(declare-fun |z_sum_3#123| () (_ BitVec 8))
(declare-fun |$paramod/FF/WIDTH=8_1#125| () (_ BitVec 8))
(define-fun |$paramod/FF/WIDTH=8_n Q#124| () (_ BitVec 8) |$paramod/FF/WIDTH=8_1#125|)
(declare-fun |z_sum_0#126| () Bool)
(declare-fun |$paramod/FF/WIDTH=8_2#128| () Bool)
(define-fun |$paramod/FF/WIDTH=8_n clk#127| () Bool |$paramod/FF/WIDTH=8_2#128|)
(declare-fun |z_sum_1#129| () Bool)
(declare-fun |$paramod/FF/WIDTH=8_3#131| () Bool)
(define-fun |$paramod/FF/WIDTH=8_n en#130| () Bool |$paramod/FF/WIDTH=8_3#131|)
(declare-fun |$paramod/FF/WIDTH=8_0#133| () (_ BitVec 8))
(define-fun |$paramod/FF/WIDTH=8_n D#132| () (_ BitVec 8) |$paramod/FF/WIDTH=8_0#133|)
(declare-fun |z_sum_4#134| () (_ BitVec 8))
(declare-fun |$paramod/FF/WIDTH=8_1#136| () (_ BitVec 8))
(define-fun |$paramod/FF/WIDTH=8_n Q#135| () (_ BitVec 8) |$paramod/FF/WIDTH=8_1#136|)
(declare-fun |$paramod/FF/WIDTH=8_2#138| () Bool)
(define-fun |$paramod/FF/WIDTH=8_n clk#137| () Bool |$paramod/FF/WIDTH=8_2#138|)
(declare-fun |$paramod/FF/WIDTH=8_3#140| () Bool)
(define-fun |$paramod/FF/WIDTH=8_n en#139| () Bool |$paramod/FF/WIDTH=8_3#140|)
(define-fun |$paramod/FF/WIDTH=8_h#141| () Bool true)
(define-fun |$paramod/FF/WIDTH=8_h#142| () Bool true)
(define-fun |z_sum_h#118| () Bool (and (= |z_sum_7#119| |$paramod/FF/WIDTH=8_n D#121|) (= |z_sum_3#123| |$paramod/FF/WIDTH=8_n Q#124|) (= |z_sum_0#126| |$paramod/FF/WIDTH=8_n clk#127|) (= |z_sum_1#129| |$paramod/FF/WIDTH=8_n en#130|) (= |z_sum_7#119| |$paramod/FF/WIDTH=8_n D#132|) (= |z_sum_4#134| |$paramod/FF/WIDTH=8_n Q#135|) (= |z_sum_0#126| |$paramod/FF/WIDTH=8_n clk#137|) (= |z_sum_1#129| |$paramod/FF/WIDTH=8_n en#139|) |$paramod/FF/WIDTH=8_h#141| |$paramod/FF/WIDTH=8_h#142| ))
(assert |z_sum_h#118|)
(assert true)
(define-fun |$paramod/FF/WIDTH=8_4#145| () (_ BitVec 8) (ite |$paramod/FF/WIDTH=8_3#77| |$paramod/FF/WIDTH=8_0#68| |$paramod/FF/WIDTH=8_1#71|))
(define-fun |$paramod/FF/WIDTH=8_t#144| () Bool (= |$paramod/FF/WIDTH=8_4#145| |$paramod/FF/WIDTH=8_1#125|) )
(define-fun |$paramod/FF/WIDTH=8_4#147| () (_ BitVec 8) (ite |$paramod/FF/WIDTH=8_3#86| |$paramod/FF/WIDTH=8_0#79| |$paramod/FF/WIDTH=8_1#82|))
(define-fun |$paramod/FF/WIDTH=8_t#146| () Bool (= |$paramod/FF/WIDTH=8_4#147| |$paramod/FF/WIDTH=8_1#136|) )
(define-fun |z_sum_t#143| () Bool (and |$paramod/FF/WIDTH=8_t#144| |$paramod/FF/WIDTH=8_t#146| ))
(assert |z_sum_t#143|)
(assert (not |z_sum_is#110|))

(define-fun |z_sum_5#151| () (_ BitVec 8) (bvadd |z_sum_3#123| |z_sum_4#134|))
(define-fun |z_sum_8#150| () (_ BitVec 1) (bvnot ((_ extract 0 0) |z_sum_5#151|)))
(define-fun |z_sum_a 0#149| () Bool (or (= ((_ extract 0 0) |z_sum_8#150|) #b1) (not (= ((_ extract 0 0) |z_sum_10#113|) #b1))))
(define-fun |$paramod/FF/WIDTH=8_a#152| () Bool true)
(define-fun |$paramod/FF/WIDTH=8_a#153| () Bool true)
(define-fun |z_sum_a#148| () Bool (and |z_sum_a 0#149| |$paramod/FF/WIDTH=8_a#152| |$paramod/FF/WIDTH=8_a#153| ))
(assert (not (and |z_sum_a#148| true)))
; running check-sat..
(set-info :status unsat)
(check-sat)
