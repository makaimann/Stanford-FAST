INPUT

OUTPUT

STATE
state_counter: BV(4);

VAR
refinement: Bool;

INIT
state_counter = 0_4 ;

INVAR
free_tail_ptr = shared_fifo.free_ptr ;
popped_head = shared_fifo.popped_head ;
rst = 0_1 ;
refinement <-> ((empty[0:0] = 0_1) -> (ghost[shared_fifo.ll.head[0_1]] = 0_2)) & ((full = 0_1) -> (ghost[shared_fifo.ll.free_list_head] = 2_2)) & ((empty[0:0] = 0_1) -> ((ghost['shared_fifo.ll.tail[0]'][1:1] = 0_1) & ((ghost['shared_fifo.ll.tail[0]'][0:0] + 1_1) = shared_fifo.ll.count[0_1][0:0]))) & ((full = 0_1) -> ((ghost[shared_fifo.ll.free_list_tail][1:1] = 1_1) & ((ghost[shared_fifo.ll.free_list_tail][0:0] + 1_1) = free_list_count[0:0]))) & (( ((0_1 != 'shared_fifo.ll.tail[0]') | (empty[0:0] = 1_1)) & ((0_1 != shared_fifo.ll.free_list_tail) | (full = 1_1)) ) -> ( (ghost[shared_fifo.ll.next_ptr[0_1]][1:1] = ghost[0_1][1:1]) & (ghost[shared_fifo.ll.next_ptr[0_1]][0:0] = (ghost[0_1][0:0] + 1_1)) )) & (( ((1_1 != 'shared_fifo.ll.tail[0]') | (empty[0:0] = 1_1)) & ((1_1 != shared_fifo.ll.free_list_tail) | (full = 1_1)) ) -> ( (ghost[shared_fifo.ll.next_ptr[1_1]][1:1] = ghost[1_1][1:1]) & (ghost[shared_fifo.ll.next_ptr[1_1]][0:0] = (ghost[1_1][0:0] + 1_1)) )) ;
(state_counter <= 1_4) -> refinement;

TRANS
next(state_counter) = state_counter + 1_4 ;

# (( (0_1 != 'shared_fifo.ll.tail[0]') & (0_1 != shared_fifo.ll.free_list_tail) ) -> ( (ghost[shared_fifo.ll.next_ptr[0_1]][1:1] = ghost[0_1][1:1]) & (ghost[shared_fifo.ll.next_ptr[0_1]][0:0] = (ghost[0_1][0:0] + 1_1)) ))